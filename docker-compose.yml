version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: chatapp_postgres
    environment:
      POSTGRES_USER: chatapp_user
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: chatapp_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatapp_user -d chatapp_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and real-time features
  redis:
    image: redis:7-alpine
    container_name: chatapp_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Python Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: chatapp_backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
    environment:
      DATABASE_URL: postgresql://chatapp_user:password123@postgres:5432/chatapp_db
      REDIS_URL: redis://redis:6379
      SECRET_KEY: dev-secret-key-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # React Frontend
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: chatapp_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000
    depends_on:
      - backend
    command: npm start

volumes:
  postgres_data:
  redis_data:
